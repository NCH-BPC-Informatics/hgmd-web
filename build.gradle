group 'org.nch.research'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        gradleVaadinPluginVersion = '1.1.2'
        springBootVersion = '1.4.4.RELEASE'
        springLoadedVersion = '1.2.6.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

ext {
    ext {
        // groovyVersion = '2.4.8'
        gradleWrapperVersion = '3.3'
        // vaadinVersion = '7.7.6'
        vaadinSpringVersion = '1.1.1'
        viritinVersion = '1.61'
        // codenarcVersion = '0.25.1'
        // spockVersion = '1.0-groovy-2.4'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
    baseName = 'hgmd-web'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "http://maven.vaadin.com/vaadin-addons" }
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url "http://oss.sonatype.org/content/repositories/vaadin-snapshots/" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'com.vaadin:vaadin-bom:7.7.6'
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa:1.4.1.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-web:1.4.1.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-tomcat:1.4.1.RELEASE")
    compile("com.vaadin:vaadin-spring-boot-starter:${vaadinSpringVersion}")
    compile("org.vaadin:viritin:${viritinVersion}")
    // compile("org.vaadin:viritin:${viritinVersion}") { exclude group: 'com.vaadin' }
    compile("com.h2database:h2")
    // compile('mysql:mysql-connector-java:5.1.40')
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.4.1.RELEASE")
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

task buildDocker(type: Docker, dependsOn: build) {
    dependsOn build
    applicationName = jar.baseName
    addFile jar.archivePath, "/app.jar"
    // entryPoint(['sh', '-c', 'java -Dspring.profiles.active=$SPRING_PROFILES_ACTIVE -DlogEnvironment=$LOG_ENVIRONMENT -jar /app.jar' ])
    entryPoint(['sh', '-c', 'java -jar /app.jar' ])
    exposePort 8080
}